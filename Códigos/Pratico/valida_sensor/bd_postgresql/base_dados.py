import serial
import psycopg2

comport = serial.Serial('COM5', 115200)
print('Serial Iniciada...\n')

# Função para criar conexão com o banco de dados postgresql
def conecta_db():
    con = psycopg2.connect(host='localhost',
                        database='db_sinais',
                        user='postgres',
                        password='123456')
    return con

# Função para criar tabela no banco de dados
def criar_db(sql_create):
    con = conecta_db()
    cur = con.cursor()
    cur.execute(sql_create)
    con.commit()
    con.close()

# Função para criar tabela no banco de dados
def inserir_dados(sql_insert, sinais):
    con = conecta_db()
    cur = con.cursor()
    cur.execute(sql_insert, sinais)
    con.commit()

sql_drop = 'DROP TABLE IF EXISTS public.sinais'
criar_db(sql_drop)

sql_create_table = ''' CREATE TABLE public.sinais
                    (
                        id  INT GENERATED BY DEFAULT AS IDENTITY
                        (START WITH 1 INCREMENT BY 1),
                        tempo TIMESTAMP NOT NULL DEFAULT NOW(),
                        vl_kalman VARCHAR(16),
                        vl_pitch  VARCHAR(16)
                    )        
                    '''
sql_insert_data = ("INSERT INTO public.sinais (vl_kalman, vl_pitch) VALUES (%s, %s)")

criar_db(sql_create_table)

con = conecta_db()
cur = con.cursor()

while (True):
    serialValue = str(comport.readline().decode('utf-8'))
    data_sinais = serialValue.split("|")
    print(data_sinais)
    if len(data_sinais[0]) > 16 or len(data_sinais[1]) > 16:
        continue
    inserir_dados(sql_insert_data, data_sinais)

con.close()
cur.close()
comport.close()
